<%= render :partial => "header", :locals => { :method_name => "Ranked Pairs", :winners => results[:winners], :warnings => results[:warnings] } %>
<div>
	<h4>Description</h4>
	<p>Voters rank candidates in an order of preference. If there is a candidate who is preferred over all others (in pairwise comparisons) then that candidate will win.</p>

	<%= render :partial => "preference_ballots", :locals => { :preferences => results[:preferences] } %>
	<%= render :partial => "pairwise_tally", :locals => { :results => results } %>
	
	<% if results[:locking].nil? %>
		<p>Notice that no candidate is preferred over <%= results[:winners][0] %>.</p>
	<% else %>
		<h4>Discard preference cycles</h4>
		<% if results[:winners].length == 1 %>
			<p>Using the sorted list above, discard any preferences that would create a cycle of preference (e.g., where A preferred over B, B is preferred over C, but C preferred over A).</p>
		<% else %>
			<p>There's no clear winner here and some candidates aren't related by preferences at all. We'll discard the weakest preferences and candidates, which will reveal the winners.</p>	
		<% end %>
		<table class="ui-state-highlight ui-corner-all">
			<thead>
				<tr><th>Voters prefer</th><th>Result</th></tr>
			</thead>
			<tbody>
				<% results[:locking].each do |l| %>
					<tr><td><%= l[0] %> over <%= l[1] %></td><td><%= l[2] %></td></tr>
				<% end %>
			</tbody>
		</table>
		<p>Among the kept pairings, no one prefers <em><%= terms(results[:winners],"</em>, <em>", "</em> or <em>") %></em> over any other candidate.</p>
	<% end %>

	<%= render :partial => "result", :locals => { :winners => results[:winners] } %>
</div>
